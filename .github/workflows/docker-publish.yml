name: Publish Containers
on:
  schedule:
    - cron: '22 4 * * *'
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
    paths:
      - 'Dockerfile'
      - '.github/workflows/docker-publish.yml'
      - 'Entrypoint.sh'
  pull_request:
    branches: [ main ]
    paths:
      - 'Dockerfile'
      - '.github/workflows/docker-publish.yml'
      - 'Entrypoint.sh'
env:
  REGISTRY: ghcr.io
jobs:
  build:
    env: 
      IMAGE_NAME: bryopsida/k8s-dev-pod
      DOCKER_FILE: Dockerfile
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@8d0fee40fd011ad052c0fed30c58d35203e9d130
        with:
          cosign-release: 'v1.4.0'
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@312f67c6629946ba17269558b63d0bd84a63caab
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@be010b42938448d8a286c21d5c4ccf2aae1524a1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@ee266832e57cb510bc6060ce5129df0529f119df
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=sha
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@965c6a410d446a30e95d35052c67d6eded60dad6
        with:
          file: ${{ env.DOCKER_FILE }}
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          platforms: linux/amd64,linux/arm64
          labels: ${{ steps.meta.outputs.labels }}
          build-args:
            COMMIT="${{ github.sha }}"
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: cosign sign ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.build-and-push.outputs.digest }}
